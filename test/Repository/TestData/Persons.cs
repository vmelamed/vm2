namespace vm2.Repository.TestData;

public static class Persons
{
    static UlidFactory UlidFactory { get; } = new UlidFactory();

    public static PersonId NextId => (PersonId)UlidFactory.NewUlid();

    internal static IEnumerable<Person> NewPersons()
        => PersonsSequence = new Person[]
        {
            PersonMilesDavis               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Miles Davis",                  birthYear: 1926, deathYear: 1991, roles: ["Performer", "Composer", "Bandleader"], instruments: ["tp"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJohnColtrane             = new Person(id: NextId, tenantId: TestTenant.Current(), name: "John Coltrane",                birthYear: 1926, deathYear: 1967, roles: ["Performer", "Composer", "Bandleader"], instruments: ["ts", "as", "ss"], genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonBillEvans                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Bill Evans",                   birthYear: 1929, deathYear: 1980, roles: ["Performer", "Composer", "Bandleader"], instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonWyntonKelly              = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Wynton Kelly",                 birthYear: 1931, deathYear: 1971, roles: ["Performer"],                           instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJulianCannonballAdderley = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Julian 'Cannonball' Adderley", birthYear: 1928, deathYear: 1975, roles: ["Performer", "Composer", "Bandleader"], instruments: ["as"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonPaulChambers             = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Paul Chambers",                birthYear: 1935, deathYear: 1969, roles: ["Performer"],                           instruments: ["b"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJimmyCobb                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Jimmy Cobb",                   birthYear: 1929, deathYear: 2020, roles: ["Performer"],                           instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonLeeMorgan                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Lee Morgan",                   birthYear: 1938, deathYear: 1972, roles: ["Performer", "Composer", "Bandleader"], instruments: ["tp"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonCurtisFuller             = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Curtis Fuller",                birthYear: 1934, deathYear: 2021, roles: ["Performer", "Composer", "Bandleader"], instruments: ["tb"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonKennyDrew                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Kenny Drew",                   birthYear: 1928, deathYear: 1993, roles: ["Performer"],                           instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonPhillyJoeJones           = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Philly Joe Jones",             birthYear: 1923, deathYear: 1985, roles: ["Performer"],                           instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonHerbieHancock            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Herbie Hancock",               birthYear: 1940, deathYear: null, roles: ["Performer", "Composer", "Bandleader"], instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonFreddieHubbard           = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Freddie Hubbard",              birthYear: 1938, deathYear: 2008, roles: ["Performer", "Composer", "Bandleader"], instruments: ["tp"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonRonCarter                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Ron Carter",                   birthYear: 1937, deathYear: null, roles: ["Performer", "Composer", "Bandleader"], instruments: ["b"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonTonyWilliams             = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Tony Williams",                birthYear: 1945, deathYear: 1997, roles: ["Performer"],                           instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonGeorgeColeman            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "George Coleman",               birthYear: 1935, deathYear: null, roles: ["Performer"],                           instruments: ["ts", "as"],       genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonMcCoyTyner               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "McCoy Tyner",                  birthYear: 1938, deathYear: 2020, roles: ["Performer", "Composer", "Bandleader"], instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonElvinJones               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Elvin Jones",                  birthYear: 1927, deathYear: 2004, roles: ["Performer", "Composer", "Bandleader"], instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJimmyGarrison            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Jimmy Garrison",               birthYear: 1934, deathYear: 1976, roles: ["Performer"],                           instruments: ["b"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonDukeEllington            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Duke Ellington",               birthYear: 1899, deathYear: 1974, roles: ["Performer", "Composer", "Bandleader",
                                                                                                                                                                                    "Arranger"],                            instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonPaulGonsalves            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Paul Gonsalves",               birthYear: 1920, deathYear: 1974, roles: ["Performer", "Composer"],               instruments: ["ts"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJohnnyHodges             = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Johnny Hodges",                birthYear: 1907, deathYear: 1970, roles: ["Performer", "Composer", "Bandleader"], instruments: ["as"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonSamWoodyard              = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Sam Woodyard",                 birthYear: 1925, deathYear: 1988, roles: ["Performer"],                           instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJimmyWoode               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Jimmy Woode",                  birthYear: 1926, deathYear: 2005, roles: ["Performer"],                           instruments: ["b"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonEllaFitzgerald           = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Ella Fitzgerald",              birthYear: 1917, deathYear: 1996, roles: ["Performer"],                           instruments: ["voc"],            genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonLouisArmstrong           = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Louis Armstrong",              birthYear: 1901, deathYear: 1971, roles: ["Performer", "Composer", "Bandleader"], instruments: ["tp", "voc"],      genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonOscarPeterson            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Oscar Peterson",               birthYear: 1925, deathYear: 2007, roles: ["Performer", "Composer", "Bandleader"], instruments: ["p"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonHerbEllis                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Herb Ellis",                   birthYear: 1921, deathYear: 2010, roles: ["Performer", "Composer", "Bandleader"], instruments: ["g"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonRayBrown                 = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Ray Brown",                    birthYear: 1926, deathYear: 2002, roles: ["Performer"],                           instruments: ["b"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonBuddyRich                = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Buddy Rich",                   birthYear: 1917, deathYear: 1987, roles: ["Performer"],                           instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonLudwigVanBeethoven       = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Ludwig van Beethoven",         birthYear: 1770, deathYear: 1827, roles: ["Composer"],                            instruments: [],                 genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonWolfgangAmadeusMozart    = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Wolfgang Amadeus Mozart",      birthYear: 1756, deathYear: 1791, roles: ["Composer"],                            instruments: [],                 genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonJohannSebastianBach      = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Johann Sebastian Bach",        birthYear: 1685, deathYear: 1750, roles: ["Composer"],                            instruments: [],                 genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonGlennGould               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Glenn Gould",                  birthYear: 1932, deathYear: 1982, roles: ["Performer"],                           instruments: ["p"],              genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonHilaryHahn               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Hilary Hahn",                  birthYear: 1979, deathYear: null, roles: ["Performer"],                           instruments: ["v"],              genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonHenrykSzeryng            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Henryk Szeryng",               birthYear: 1918, deathYear: 1988, roles: ["Performer"],                           instruments: ["v"],              genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonMstislavRostropovich     = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Mstislav Rostropovich",        birthYear: 1927, deathYear: 2007, roles: ["Performer"],                           instruments: ["vc"],             genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonBerlinerPhilharmoniker   = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Berliner Philharmoniker",      birthYear: 1882, deathYear: null, roles: ["Orchestra"],                           instruments: [],                 genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonWienerPhilharmoniker     = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Wiener Philharmoniker",        birthYear: 1843, deathYear: null, roles: ["Orchestra"],                           instruments: [],                 genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonLondonSymphonyOrchestra  = new Person(id: NextId, tenantId: TestTenant.Current(), name: "London Symphony Orchestra",    birthYear: 1904, deathYear: null, roles: ["Orchestra"],                           instruments: [],                 genres: ["Classical"],         createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonScottLaFaro              = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Scott LaFaro",                 birthYear: 1936, deathYear: 1961, roles: ["Performer"],                           instruments: ["b"],              genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonPaulMotian               = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Paul Motian",                  birthYear: 1931, deathYear: 2011, roles: ["Performer"],                           instruments: ["dr"],             genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            // Producers and Arrangers
            PersonIrvingTownsend           = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Irving Townsend",              birthYear: 1920, deathYear: 1981, roles: ["Producer"],                            instruments: [],                 genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonGeorgeAvakian            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "George Avakian",               birthYear: 1919, deathYear: 2017, roles: ["Producer"],                            instruments: [],                 genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
            PersonOrrinKeepnews            = new Person(id: NextId, tenantId: TestTenant.Current(), name: "Orrin Keepnews",               birthYear: 1923, deathYear: 2015, roles: ["Producer"],                            instruments: [],                 genres: ["Jazz"],              createdAt: NextDt, createdBy: Creator, updatedAt: CurrentDt, updatedBy: Creator),
        };

    public static IEnumerable<Person> PersonsSequence { get => field.Any() ? field : NewPersons(); private set; } = [];

    public static Person PersonMilesDavis { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJohnColtrane { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonBillEvans { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonWyntonKelly { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJulianCannonballAdderley { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonPaulChambers { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJimmyCobb { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonLeeMorgan { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonCurtisFuller { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonKennyDrew { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonPhillyJoeJones { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonHerbieHancock { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonFreddieHubbard { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonRonCarter { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonTonyWilliams { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonGeorgeColeman { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonMcCoyTyner { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonElvinJones { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJimmyGarrison { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonDukeEllington { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonPaulGonsalves { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJohnnyHodges { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonSamWoodyard { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJimmyWoode { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonEllaFitzgerald { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonLouisArmstrong { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonOscarPeterson { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonHerbEllis { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonRayBrown { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonBuddyRich { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonLudwigVanBeethoven { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonWolfgangAmadeusMozart { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonJohannSebastianBach { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonGlennGould { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonHilaryHahn { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonHenrykSzeryng { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonMstislavRostropovich { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonBerlinerPhilharmoniker { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonWienerPhilharmoniker { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonLondonSymphonyOrchestra { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonScottLaFaro { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonPaulMotian { get => field ?? (NewPersons(), field!).Item2; private set; }
    // Producers and Arrangers
    public static Person PersonIrvingTownsend { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonGeorgeAvakian { get => field ?? (NewPersons(), field!).Item2; private set; }
    public static Person PersonOrrinKeepnews { get => field ?? (NewPersons(), field!).Item2; private set; }
}

