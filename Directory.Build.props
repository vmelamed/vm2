<Project>
    <PropertyGroup Label="Packages">
        <TargetFramework>net9.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
        <WarningLevel>9999</WarningLevel>
        <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
        <WarningsAsErrors />
        <NoWarn>$(NoWarn);IDE0058;IDE0290;IDE0130;NU1109;NU1507</NoWarn>
        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>

    <PropertyGroup Label="NuGetGlobal">
        <IsPackable>true</IsPackable>
        <Company>vm</Company>
        <Product>vm2</Product>
        <ProductName>Val Melamed's packages</ProductName>
        <Authors>Val Melamed</Authors>
        <RepositoryUrl>https://github.com/vmelamed/vm2</RepositoryUrl>
        <Copyright>Copyright Â© 2023-2025 vm</Copyright>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <RepositoryType>git</RepositoryType>
        <IncludeSymbols>True</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(MSBuildProjectDirectory), '[/\\]test[/\\]'))">
        <!-- Test projects settings -->
        <IsTestProject>true</IsTestProject>
        <IsPackable>false</IsPackable>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
        <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
        <UseMicrosoftTestingPlatformRunner>true</UseMicrosoftTestingPlatformRunner>
        <NoWarn>
            $(NoWarn);CA1031;CA1701;CA1702;CA1707;CA1806;CA2211;CS0618;CS1572;CS1573;CS1574;CS1591;CS1711;IDE0021;IDE0022;IDE0065;IDE1006;IDE2000;IDE2002;IDE0058;IDE0290
        </NoWarn>
    </PropertyGroup>

    <ItemGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(MSBuildProjectDirectory), '[/\\]test[/\\]')) and $([System.Text.RegularExpressions.Regex]::IsMatch($(MSBuildProjectName), '^*.Tests$'))">
        <PackageReference Include="NSubstitute" />
        <PackageReference Include="FluentAssertions" />
        <PackageReference Include="xunit.v3" />
        <PackageReference Include="Microsoft.Testing.Extensions.CodeCoverage" />
        <PackageReference Include="coverlet.collector">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(MSBuildProjectDirectory), '[/\\]test[/\\]')) and !$([System.Text.RegularExpressions.Regex]::IsMatch($(MSBuildProjectName), '^*.Tests$'))">
        <PackageReference Include="xunit.v3.extensibility.core"/>
    </ItemGroup>

</Project>
